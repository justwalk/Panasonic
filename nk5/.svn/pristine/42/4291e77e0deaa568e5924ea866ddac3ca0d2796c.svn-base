define([
  'jquery',
  'underscore',
  'backbone',
  'views/schedules/task',
  'text!templates/schedules/tasks.html',
  'touchPunch',
  'bootstrapDatatables'
], function($, _, Backbone, TaskView, tasksTemplate){
    TasksView = Backbone.View.extend({
      template: _.template(underi18n.template(tasksTemplate, msgFactory)),
      initialize: function() {
        this.collection.bind('add reset remove', this.render, this);
      }, 
      events: {
              'click .select-schedule': 'selectSchedule',
              'click .select-all': 'selectAll',
              'click .refreshtask': 'refreshData'
          },
      
      render: function() {
        var self = this;
        self.$el.html(this.template());
        this.collection.each(function(task) {
          if(self.isSchedule&&task.get('execute')!='schedule'){
            return false;
          }
          var taskView = new TaskView({task: task});
          $('#schedules-container', self.el).append(taskView.render().el);
        });
        $('#schedules-table', this.el).dataTable({

          'sDom': 'R<\'row-fluid table-data-search\'<\'datatable-part pull-left\'l>r <\'datatable-part pull-right\' f> > t<\'row-fluid\'<\'datatable-part-medium pull-left\'i><\'datatable-part-medium padding-remove-a pull-right\'p><\'datatable-part-small\' T>>',
          'sPaginationType': 'bootstrap',
          'oLanguage': {
           'sUrl': '/dt.' + App.locale + '.js'

          },
          oTableTools: {
            'sSwfPath': 'javascripts/vendor/datatable/copy_csv_xls_pdf.swf',
            'aButtons': [{
                    "sButtonText": "csv",
                      "sExtends": "xls",
                      "bFooter": false
                  }, {
                    "sButtonText": "xls",
                      "sExtends": "csv",
                      "bFooter": false
                  },{
                    "sButtonText": "pdf",
                      "sExtends": "pdf",
                      "bFooter": false
                  }],
          },
          'bAutoWidth': false,
          'bDestroy': true,
          'bFilter': true,
          'nTFoot': false,
          'aoColumns' : [
          {sWidth: '25%'},
          {sWidth: '25%'},
          {sWidth: '16%'},
          {sWidth: '9%'},
          {sWidth: '9%'},
          {sWidth: '9%'},
          {sWidth: '7%'}
          ]
        }).columnFilter({
          aoColumns: [
          {type: 'text'},
          {type: 'text'},
          {type: 'text'},
          {type: 'date-range'},
          {type: 'date-range'},
          {type: 'select', values: [App.msgFactory('success'), App.msgFactory('failed')]},
          {type: 'select', values:[App.msgFactory('Remove')]}
          ]
        });
        this.delegateEvents();
      },
      selectAll:function(){
        this.isSchedule=false;
        this.render();
      },
      selectSchedule:function(){
        this.isSchedule=true;
        this.render();
      },
      refreshData:function(){
         this.collection.fetchWithGroupId("");
      }
    });
    return TasksView;
});
