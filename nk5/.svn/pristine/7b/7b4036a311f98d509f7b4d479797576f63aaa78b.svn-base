var Schema = require('jugglingdb').Schema;

schema = new Schema('postgres', {database:'nk5', username:'postgres', password:'root', port: 5432});
/*schema.on('log', function(msg) {
  console.log(msg);
});*/

/*var Computer = schema.define('Computer', {
  name:         String,
  placeholder:  String,
  mac_address:  String,
  status:       String,
  group_id:     Number,
  error:        Boolean,
  boot_file:    String,
  posX:         Number,
  posY:         Number,
  uptime:       Number,
  unknown:      Boolean,
  update:       Boolean,
  warning:      Boolean,
  failed:       Boolean
});*/

var Computer = schema.define('Computer', {
  cid:          Number,
  x:            Number,
  y:            Number,
  locked:       { type: Boolean, default: false }
});

var Process = schema.define('Process', {
	Id: Number,
	MachineName: String,
	MainModule: String,
	MainWindowTitle: String,
	StartTime: Number,
	ExitTime: Number,
	ExitCode: Number,
	ProcessName: String,
	User: String,
	ProcessOwner: String
});

var ProcessEvent = schema.define('ProcessEvent', {
	Type: String,
	pid: Number,
	Time: Date
});

var Session = schema.define('Session', {
	Type: String,
	MachineName: String,
	UserName: String,
	Time: Date
});

var Log = schema.define('Log', {
  id: Number,
  type: String,
  host_name: String,
  time: Date,
  user_name:String,
  os:String,
  process_id:String,
  application:String,
  message:String,
});

var Task = schema.define('Task', {
  name:                 String,
  action:               String,
  memo:                 String,
  execute:              String,
  cycle:                String,
  weekdays:             String,
  month_days:           String,
  date:                 String,
  countdown:            Number,
  command:              String,
  mac:                  String,
  prefix:               String,
  size:                 Number,
  start_number:         Number,
  update_mode:          String,
  update_wait_time:     Number,
  snapshot_comment:     String,
  time:                 String,
  computer_uuid:        String,
  computer_name:        String,
  menu_pack_id:         String,
  last_run_status:      String,
  last_run_date:        Date,
  last_run_log:         String,
  next_execution_date:  Date,
  enable:            { type: Boolean, default: true }
});

var Menu = schema.define('Menu', {});
var Pack = schema.define('Pack', {});
var Disk = schema.define('Disk', {});
var Group = schema.define('Group', {});
// Task.belongsTo(Computer, {as: 'computer', foreignKey:'computer_id'})

module.exports.Schema = schema;
module.exports.Group = Group;
module.exports.Computer = Computer;
module.exports.Task = Task;
module.exports.Menu = Menu;
module.exports.Pack = Pack;
module.exports.Disk = Disk;
module.exports.Process = Process;
module.exports.ProcessEvent = ProcessEvent;
module.exports.Session = Session;
module.exports.Log = Log;